// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "LRU Cache API",
    "title": "LRU Cache",
    "version": "1.0.0"
  },
  "basePath": "/lru-cache/v1",
  "paths": {
    "/get/{id}": {
      "get": {
        "description": "Retrieves the value associated with the provided key from the cache.",
        "summary": "Get value from cache",
        "operationId": "lrucache.get",
        "parameters": [
          {
            "type": "string",
            "description": "The key to retrieve the value for",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "schema": {
              "$ref": "#/definitions/CacheResponse"
            }
          },
          "404": {
            "description": "Key not found in cache"
          }
        }
      }
    },
    "/set": {
      "post": {
        "description": "Stores a key-value pair in the cache.",
        "produces": [
          "application/json"
        ],
        "summary": "Set a key-value pair in the cache",
        "operationId": "lrucache.post",
        "parameters": [
          {
            "description": "Stores a key-value pair in the cache.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CacheItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Key-value pair successfully stored"
          }
        }
      }
    }
  },
  "definitions": {
    "CacheItem": {
      "type": "object",
      "properties": {
        "key": {
          "description": "The key to store",
          "type": "string"
        },
        "value": {
          "description": "The value to store",
          "type": "string"
        }
      }
    },
    "CacheResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The retrieved value (for GET)",
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "LRU Cache API",
    "title": "LRU Cache",
    "version": "1.0.0"
  },
  "basePath": "/lru-cache/v1",
  "paths": {
    "/get/{id}": {
      "get": {
        "description": "Retrieves the value associated with the provided key from the cache.",
        "summary": "Get value from cache",
        "operationId": "lrucache.get",
        "parameters": [
          {
            "type": "string",
            "description": "The key to retrieve the value for",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "schema": {
              "$ref": "#/definitions/CacheResponse"
            }
          },
          "404": {
            "description": "Key not found in cache"
          }
        }
      }
    },
    "/set": {
      "post": {
        "description": "Stores a key-value pair in the cache.",
        "produces": [
          "application/json"
        ],
        "summary": "Set a key-value pair in the cache",
        "operationId": "lrucache.post",
        "parameters": [
          {
            "description": "Stores a key-value pair in the cache.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CacheItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Key-value pair successfully stored"
          }
        }
      }
    }
  },
  "definitions": {
    "CacheItem": {
      "type": "object",
      "properties": {
        "key": {
          "description": "The key to store",
          "type": "string"
        },
        "value": {
          "description": "The value to store",
          "type": "string"
        }
      }
    },
    "CacheResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The retrieved value (for GET)",
          "type": "string"
        }
      }
    }
  }
}`))
}
